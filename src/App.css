*, *::before, *::after{
    margin: 0;
    box-sizing: border-box;
    font-family: 'Roboto', sans-serif;
}

:root{
    --select-border: #ccc;
    --select-focus: rgb(8, 71, 184);
    --primary-blue: rgb(8, 71, 184);
    --select-arrow: var(var(--select-border));
    --form-control-color: rgb(8, 71, 184);
}

/* #root{
  
} */

h1, h2, h3, h4 {
    /* font-family: 'Montserrat', sans-serif; */
    font-weight: bold;
}

hr {
    border: 0;
    outline: .5px solid #eee;
}

div{
    margin: 0;
    padding: 0;
}

.label{
    color: #555;
    font-size: 1rem;
}

.labelText{
    color: #888;
    line-height: 2rem;
}

.hint{
    color: #ccc;
}


input[type=submit]{
    border: 0;
    background-image: linear-gradient(to right, rgb(8, 71, 184), rgb(11, 87, 221));
    color: #fff;
    font-weight: light;
    cursor: pointer;
    text-transform: uppercase;
    transition: 1s ease-in-out;
}

input[type=submit]:hover{
    background-image: linear-gradient(to right, rgb(4, 168, 113), rgb(22, 221, 154));
    outline: 0;
}

.ts-btn {
    transition: 1s ease-in-out;
    text-transform: uppercase;
    cursor: pointer;
    border: 0;
    outline: 0;
}

.ts-btn:hover{
    background-image: linear-gradient(to right, rgb(4, 168, 113), rgb(22, 221, 154));
    color: #fff;
}

.ts-btn-outline{
    text-transform: uppercase;
    transition: 1s ease-in-out;
    cursor: pointer;
}

.ts-btn-outline:hover{
    background-image: linear-gradient(to right, rgb(8, 71, 184), rgb(11, 87, 221));
    color: #fff;
    outline: 0;
}

.ts-input, select{
    width: 100%;
    display: inline-block;
    box-sizing: border-box;
    font-size: 1rem;
    border: 0;
    outline: .01rem solid #ccc;
    font-weight: light;
    padding-inline-start: 1rem;
    padding-inline-end: 3.5rem;
    border-radius: .5rem;
    color: rgb(80, 80, 80);
    transition: 1s ease-in-out;
}

.ts-input:focus, .ts-input:hover {
    outline: .01rem solid rgb(11, 87, 221);
    letter-spacing: .05rem;
    box-shadow: 0 0 1rem rgba(11, 87, 221, .2);;
}

.ts-input[type=password]:focus{
    font-size: 1.25rem;
}

::placeholder{
    color: #555;
}

select{
    appearance: none;
    background-color: transparent;
    display: grid;
    grid-template-areas: 'select';
    grid-area: select;
}

select::after{
    content: "";
    width: .8rem;
    height: .5rem;
    background-color: var(--select-arrow);
    clip-path: polygon(100% 0%, 0% 0%, 50%, 100%);
}



select::-ms-expand{
    display: none;
}

select .hint{
    color: #ccc;
}

textarea{
    padding-top: .5rem;
    resize: none;
    min-height: 5rem;
    letter-spacing: 0;
}

/** Begin TS Custom Checkbox */

.ts-checkbox-container{
    display: flex;
    align-items: center;
    height: 2rem;
}

.ts-checkbox{
    display: block;
    position: relative;
    cursor: pointer;
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    height: 2rem;
    width: 2rem;
}

.ts-checkbox input{
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.checkmark{
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: rgb(227, 227, 227);
    border-radius: .25rem;
}

.ts-checkbox:hover input ~ .checkmark {
    background-color: rgb(141, 186, 238);
}

.ts-checkbox input:checked ~ .checkmark {
    background-color: rgb(11, 87, 221);
}

.checkmark::after{
    content: "";
    position: absolute;
}

.ts-checkbox input:checked ~ .checkmark::after{
    display: block;
}

.ts-checkbox .checkmark::after{
    left: .75rem;
    top: .3rem;
    width: .5rem;
    height: 1rem;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

/* End TS Custom Checkbox */

.ts-radio-container{
    display: flex;
    align-items: center;
    align-content: center;
    height: 2rem;
}

.ts-radio {
    display: block;
    position: relative;
    cursor: pointer;
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    height: 2rem;
    width: 2rem;
  }
  
  /* Hide the browser's default radio button */
  .ts-radio input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom radio button */
  .radiocheck {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: rgb(227, 227, 227);
    border-radius: 50%;
  }
  
  /* On mouse-over, add a grey background color */
  .ts-radio input:hover ~ .radiocheck{
    background-color: rgb(141, 186, 238);
  }
  
  /* When the radio button is checked, add a blue background */
  .ts-radio input:checked ~ .radiocheck {
    background-color: rgb(11, 87, 221);
  }
  
  /* Create the indicator (the dot/circle - hidden when not checked) */
  .radiocheck:after {
    content: "";
    position: absolute;
  }
  
  /* Show the indicator (dot/circle) when checked */
  .ts-radio input:checked ~ .radiocheck::after {
    display: block;
  }
  
  /* Style the indicator (dot/circle) */
  .ts-radio .radiocheck::after {
    top: .5rem;
      left: .5rem;
      width: 1rem;
      height: 1rem;
      border-radius: 50%;
      background: white;
  }

/* End Custom Radio Button */


/* CheckBoxGroup */

.checkBoxGroup{
    display: flex;
    gap: 1rem;
}

/* End CheckBoxGroup */

/* RadioGroup */

.radioGroup{
    display: flex;
    gap: 1rem;
}

/* End RadioGroup */


/* Top Nav*/
.nav-item{
    display: flex; 
    width: 100%; 
    place-content: center flex-start; 
    align-items: center; 
    font-size: 1rem; 
    font-weight: light;
    cursor: pointer;
}

.nav-item:hover:hover, .nav-item:focus{
    color: rgb(11, 87, 221);
}
/* End Top Nav */


/* Vertical Course Card */
.vertical-course-card:hover{
    /* border: 2px solid rgb(11, 87, 221); */
    border: 2px solid #555;
}

/* End Vertical Course Card */

